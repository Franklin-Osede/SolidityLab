{"abi":[{"type":"function","name":"arithmeticError","inputs":[],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"assertionError","inputs":[],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"divisionError","inputs":[],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"encodeStorageError","inputs":[],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"enumConversionError","inputs":[],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"indexOOBError","inputs":[],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"memOverflowError","inputs":[],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"popError","inputs":[],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"zeroVarError","inputs":[],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"view"}],"bytecode":{"object":"0x610249610035600b8282823980515f1a60731461002957634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061009b575f3560e01c8063986c5f681161006e578063986c5f68146100d5578063b22dc54d146100dd578063b67689da146100e5578063d160e4de146100ed578063fa784a44146100f5575f80fd5b806305ee86121461009f57806310332977146100bd5780631de45560146100c55780638995290f146100cd575b5f80fd5b6100a76100fd565b6040516100b491906101c8565b60405180910390f35b6100a7610138565b6100a761014a565b6100a761015c565b6100a761016e565b6100a7610180565b6100a7610192565b6100a76101a4565b6100a76101b6565b604051603260248201526044015b60408051601f198184030181529190526020810180516001600160e01b0316634e487b7160e01b17905281565b6040516001602482015260440161010b565b6040516021602482015260440161010b565b6040516011602482015260440161010b565b6040516041602482015260440161010b565b6040516031602482015260440161010b565b6040516051602482015260440161010b565b6040516022602482015260440161010b565b6040516012602482015260440161010b565b5f6020808352835180828501525f5b818110156101f3578581018301518582016040015282016101d7565b505f604082860101526040601f19601f830116850101925050509291505056fea2646970667358221220b00f267b8aeb832247c8c848b237dffa548a3e7761029298f3fbae86debaa3ff64736f6c63430008140033","sourceMap":"162:850:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;162:850:6;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x730000000000000000000000000000000000000000301460806040526004361061009b575f3560e01c8063986c5f681161006e578063986c5f68146100d5578063b22dc54d146100dd578063b67689da146100e5578063d160e4de146100ed578063fa784a44146100f5575f80fd5b806305ee86121461009f57806310332977146100bd5780631de45560146100c55780638995290f146100cd575b5f80fd5b6100a76100fd565b6040516100b491906101c8565b60405180910390f35b6100a7610138565b6100a761014a565b6100a761015c565b6100a761016e565b6100a7610180565b6100a7610192565b6100a76101a4565b6100a76101b6565b604051603260248201526044015b60408051601f198184030181529190526020810180516001600160e01b0316634e487b7160e01b17905281565b6040516001602482015260440161010b565b6040516021602482015260440161010b565b6040516011602482015260440161010b565b6040516041602482015260440161010b565b6040516031602482015260440161010b565b6040516051602482015260440161010b565b6040516022602482015260440161010b565b6040516012602482015260440161010b565b5f6020808352835180828501525f5b818110156101f3578581018301518582016040015282016101d7565b505f604082860101526040601f19601f830116850101925050509291505056fea2646970667358221220b00f267b8aeb832247c8c848b237dffa548a3e7761029298f3fbae86debaa3ff64736f6c63430008140033","sourceMap":"162:850:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;740:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;185:86;;;:::i;461:91::-;;;:::i;277:87::-;;;:::i;831:88::-;;;:::i;654:80::-;;;:::i;925:84::-;;;:::i;558:90::-;;;:::i;370:85::-;;;:::i;740:::-;778:47;;820:4;778:47;;;726:36:30;699:18;;778:47:6;;;;-1:-1:-1;;778:47:6;;;;;;;;;;;;;;-1:-1:-1;;;;;778:47:6;-1:-1:-1;;;778:47:6;;;740:85;:::o;185:86::-;224:47;;266:4;224:47;;;726:36:30;699:18;;224:47:6;573:195:30;461:91:6;505:47;;547:4;505:47;;;726:36:30;699:18;;505:47:6;573:195:30;277:87:6;317:47;;359:4;317:47;;;726:36:30;699:18;;317:47:6;573:195:30;831:88:6;872:47;;914:4;872:47;;;726:36:30;699:18;;872:47:6;573:195:30;654:80:6;687:47;;729:4;687:47;;;726:36:30;699:18;;687:47:6;573:195:30;925:84:6;962:47;;1004:4;962:47;;;726:36:30;699:18;;962:47:6;573:195:30;558:90:6;601:47;;643:4;601:47;;;726:36:30;699:18;;601:47:6;573:195:30;370:85:6;408:47;;450:4;408:47;;;726:36:30;699:18;;408:47:6;573:195:30;14:554;132:4;161:2;190;179:9;172:21;222:6;216:13;265:6;260:2;249:9;245:18;238:34;290:1;300:140;314:6;311:1;308:13;300:140;;;409:14;;;405:23;;399:30;375:17;;;394:2;371:26;364:66;329:10;;300:140;;;304:3;489:1;484:2;475:6;464:9;460:22;456:31;449:42;559:2;552;548:7;543:2;535:6;531:15;527:29;516:9;512:45;508:54;500:62;;;;14:554;;;;:::o","linkReferences":{}},"assembly":"    /* \"lib/forge-std/src/StdError.sol\":162:1012  library stdError {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"lib/forge-std/src/StdError.sol\":162:1012  library stdError {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x986c5f68\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x986c5f68\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xb22dc54d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xb67689da\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xd160e4de\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xfa784a44\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      dup1\n      0x05ee8612\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x10332977\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1de45560\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8995290f\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"lib/forge-std/src/StdError.sol\":740:825  bytes public constant indexOOBError = abi.encodeWithSignature(\"Panic(uint256)\", 0x32) */\n    tag_2:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/forge-std/src/StdError.sol\":185:271  bytes public constant assertionError = abi.encodeWithSignature(\"Panic(uint256)\", 0x01) */\n    tag_3:\n      tag_12\n      tag_17\n      jump\t// in\n        /* \"lib/forge-std/src/StdError.sol\":461:552  bytes public constant enumConversionError = abi.encodeWithSignature(\"Panic(uint256)\", 0x21) */\n    tag_4:\n      tag_12\n      tag_20\n      jump\t// in\n        /* \"lib/forge-std/src/StdError.sol\":277:364  bytes public constant arithmeticError = abi.encodeWithSignature(\"Panic(uint256)\", 0x11) */\n    tag_5:\n      tag_12\n      tag_23\n      jump\t// in\n        /* \"lib/forge-std/src/StdError.sol\":831:919  bytes public constant memOverflowError = abi.encodeWithSignature(\"Panic(uint256)\", 0x41) */\n    tag_6:\n      tag_12\n      tag_26\n      jump\t// in\n        /* \"lib/forge-std/src/StdError.sol\":654:734  bytes public constant popError = abi.encodeWithSignature(\"Panic(uint256)\", 0x31) */\n    tag_7:\n      tag_12\n      tag_29\n      jump\t// in\n        /* \"lib/forge-std/src/StdError.sol\":925:1009  bytes public constant zeroVarError = abi.encodeWithSignature(\"Panic(uint256)\", 0x51) */\n    tag_8:\n      tag_12\n      tag_32\n      jump\t// in\n        /* \"lib/forge-std/src/StdError.sol\":558:648  bytes public constant encodeStorageError = abi.encodeWithSignature(\"Panic(uint256)\", 0x22) */\n    tag_9:\n      tag_12\n      tag_35\n      jump\t// in\n        /* \"lib/forge-std/src/StdError.sol\":370:455  bytes public constant divisionError = abi.encodeWithSignature(\"Panic(uint256)\", 0x12) */\n    tag_10:\n      tag_12\n      tag_38\n      jump\t// in\n        /* \"lib/forge-std/src/StdError.sol\":740:825  bytes public constant indexOOBError = abi.encodeWithSignature(\"Panic(uint256)\", 0x32) */\n    tag_13:\n        /* \"lib/forge-std/src/StdError.sol\":778:825  abi.encodeWithSignature(\"Panic(uint256)\", 0x32) */\n      mload(0x40)\n        /* \"lib/forge-std/src/StdError.sol\":820:824  0x32 */\n      0x32\n        /* \"lib/forge-std/src/StdError.sol\":778:825  abi.encodeWithSignature(\"Panic(uint256)\", 0x32) */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":726:762   */\n      mstore\n        /* \"#utility.yul\":699:717   */\n      0x44\n      add\n        /* \"lib/forge-std/src/StdError.sol\":778:825  abi.encodeWithSignature(\"Panic(uint256)\", 0x32) */\n    tag_40:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      swap1\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0x4e487b71)\n      or\n      swap1\n      mstore\n        /* \"lib/forge-std/src/StdError.sol\":740:825  bytes public constant indexOOBError = abi.encodeWithSignature(\"Panic(uint256)\", 0x32) */\n      dup2\n      jump\t// out\n        /* \"lib/forge-std/src/StdError.sol\":185:271  bytes public constant assertionError = abi.encodeWithSignature(\"Panic(uint256)\", 0x01) */\n    tag_17:\n        /* \"lib/forge-std/src/StdError.sol\":224:271  abi.encodeWithSignature(\"Panic(uint256)\", 0x01) */\n      mload(0x40)\n        /* \"lib/forge-std/src/StdError.sol\":266:270  0x01 */\n      0x01\n        /* \"lib/forge-std/src/StdError.sol\":224:271  abi.encodeWithSignature(\"Panic(uint256)\", 0x01) */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":726:762   */\n      mstore\n        /* \"#utility.yul\":699:717   */\n      0x44\n      add\n        /* \"lib/forge-std/src/StdError.sol\":224:271  abi.encodeWithSignature(\"Panic(uint256)\", 0x01) */\n      tag_40\n        /* \"#utility.yul\":573:768   */\n      jump\n        /* \"lib/forge-std/src/StdError.sol\":461:552  bytes public constant enumConversionError = abi.encodeWithSignature(\"Panic(uint256)\", 0x21) */\n    tag_20:\n        /* \"lib/forge-std/src/StdError.sol\":505:552  abi.encodeWithSignature(\"Panic(uint256)\", 0x21) */\n      mload(0x40)\n        /* \"lib/forge-std/src/StdError.sol\":547:551  0x21 */\n      0x21\n        /* \"lib/forge-std/src/StdError.sol\":505:552  abi.encodeWithSignature(\"Panic(uint256)\", 0x21) */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":726:762   */\n      mstore\n        /* \"#utility.yul\":699:717   */\n      0x44\n      add\n        /* \"lib/forge-std/src/StdError.sol\":505:552  abi.encodeWithSignature(\"Panic(uint256)\", 0x21) */\n      tag_40\n        /* \"#utility.yul\":573:768   */\n      jump\n        /* \"lib/forge-std/src/StdError.sol\":277:364  bytes public constant arithmeticError = abi.encodeWithSignature(\"Panic(uint256)\", 0x11) */\n    tag_23:\n        /* \"lib/forge-std/src/StdError.sol\":317:364  abi.encodeWithSignature(\"Panic(uint256)\", 0x11) */\n      mload(0x40)\n        /* \"lib/forge-std/src/StdError.sol\":359:363  0x11 */\n      0x11\n        /* \"lib/forge-std/src/StdError.sol\":317:364  abi.encodeWithSignature(\"Panic(uint256)\", 0x11) */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":726:762   */\n      mstore\n        /* \"#utility.yul\":699:717   */\n      0x44\n      add\n        /* \"lib/forge-std/src/StdError.sol\":317:364  abi.encodeWithSignature(\"Panic(uint256)\", 0x11) */\n      tag_40\n        /* \"#utility.yul\":573:768   */\n      jump\n        /* \"lib/forge-std/src/StdError.sol\":831:919  bytes public constant memOverflowError = abi.encodeWithSignature(\"Panic(uint256)\", 0x41) */\n    tag_26:\n        /* \"lib/forge-std/src/StdError.sol\":872:919  abi.encodeWithSignature(\"Panic(uint256)\", 0x41) */\n      mload(0x40)\n        /* \"lib/forge-std/src/StdError.sol\":914:918  0x41 */\n      0x41\n        /* \"lib/forge-std/src/StdError.sol\":872:919  abi.encodeWithSignature(\"Panic(uint256)\", 0x41) */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":726:762   */\n      mstore\n        /* \"#utility.yul\":699:717   */\n      0x44\n      add\n        /* \"lib/forge-std/src/StdError.sol\":872:919  abi.encodeWithSignature(\"Panic(uint256)\", 0x41) */\n      tag_40\n        /* \"#utility.yul\":573:768   */\n      jump\n        /* \"lib/forge-std/src/StdError.sol\":654:734  bytes public constant popError = abi.encodeWithSignature(\"Panic(uint256)\", 0x31) */\n    tag_29:\n        /* \"lib/forge-std/src/StdError.sol\":687:734  abi.encodeWithSignature(\"Panic(uint256)\", 0x31) */\n      mload(0x40)\n        /* \"lib/forge-std/src/StdError.sol\":729:733  0x31 */\n      0x31\n        /* \"lib/forge-std/src/StdError.sol\":687:734  abi.encodeWithSignature(\"Panic(uint256)\", 0x31) */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":726:762   */\n      mstore\n        /* \"#utility.yul\":699:717   */\n      0x44\n      add\n        /* \"lib/forge-std/src/StdError.sol\":687:734  abi.encodeWithSignature(\"Panic(uint256)\", 0x31) */\n      tag_40\n        /* \"#utility.yul\":573:768   */\n      jump\n        /* \"lib/forge-std/src/StdError.sol\":925:1009  bytes public constant zeroVarError = abi.encodeWithSignature(\"Panic(uint256)\", 0x51) */\n    tag_32:\n        /* \"lib/forge-std/src/StdError.sol\":962:1009  abi.encodeWithSignature(\"Panic(uint256)\", 0x51) */\n      mload(0x40)\n        /* \"lib/forge-std/src/StdError.sol\":1004:1008  0x51 */\n      0x51\n        /* \"lib/forge-std/src/StdError.sol\":962:1009  abi.encodeWithSignature(\"Panic(uint256)\", 0x51) */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":726:762   */\n      mstore\n        /* \"#utility.yul\":699:717   */\n      0x44\n      add\n        /* \"lib/forge-std/src/StdError.sol\":962:1009  abi.encodeWithSignature(\"Panic(uint256)\", 0x51) */\n      tag_40\n        /* \"#utility.yul\":573:768   */\n      jump\n        /* \"lib/forge-std/src/StdError.sol\":558:648  bytes public constant encodeStorageError = abi.encodeWithSignature(\"Panic(uint256)\", 0x22) */\n    tag_35:\n        /* \"lib/forge-std/src/StdError.sol\":601:648  abi.encodeWithSignature(\"Panic(uint256)\", 0x22) */\n      mload(0x40)\n        /* \"lib/forge-std/src/StdError.sol\":643:647  0x22 */\n      0x22\n        /* \"lib/forge-std/src/StdError.sol\":601:648  abi.encodeWithSignature(\"Panic(uint256)\", 0x22) */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":726:762   */\n      mstore\n        /* \"#utility.yul\":699:717   */\n      0x44\n      add\n        /* \"lib/forge-std/src/StdError.sol\":601:648  abi.encodeWithSignature(\"Panic(uint256)\", 0x22) */\n      tag_40\n        /* \"#utility.yul\":573:768   */\n      jump\n        /* \"lib/forge-std/src/StdError.sol\":370:455  bytes public constant divisionError = abi.encodeWithSignature(\"Panic(uint256)\", 0x12) */\n    tag_38:\n        /* \"lib/forge-std/src/StdError.sol\":408:455  abi.encodeWithSignature(\"Panic(uint256)\", 0x12) */\n      mload(0x40)\n        /* \"lib/forge-std/src/StdError.sol\":450:454  0x12 */\n      0x12\n        /* \"lib/forge-std/src/StdError.sol\":408:455  abi.encodeWithSignature(\"Panic(uint256)\", 0x12) */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":726:762   */\n      mstore\n        /* \"#utility.yul\":699:717   */\n      0x44\n      add\n        /* \"lib/forge-std/src/StdError.sol\":408:455  abi.encodeWithSignature(\"Panic(uint256)\", 0x12) */\n      tag_40\n        /* \"#utility.yul\":573:768   */\n      jump\n        /* \"#utility.yul\":14:568   */\n    tag_15:\n        /* \"#utility.yul\":132:136   */\n      0x00\n        /* \"#utility.yul\":161:163   */\n      0x20\n        /* \"#utility.yul\":190:192   */\n      dup1\n        /* \"#utility.yul\":179:188   */\n      dup4\n        /* \"#utility.yul\":172:193   */\n      mstore\n        /* \"#utility.yul\":222:228   */\n      dup4\n        /* \"#utility.yul\":216:229   */\n      mload\n        /* \"#utility.yul\":265:271   */\n      dup1\n        /* \"#utility.yul\":260:262   */\n      dup3\n        /* \"#utility.yul\":249:258   */\n      dup6\n        /* \"#utility.yul\":245:263   */\n      add\n        /* \"#utility.yul\":238:272   */\n      mstore\n        /* \"#utility.yul\":290:291   */\n      0x00\n        /* \"#utility.yul\":300:440   */\n    tag_60:\n        /* \"#utility.yul\":314:320   */\n      dup2\n        /* \"#utility.yul\":311:312   */\n      dup2\n        /* \"#utility.yul\":308:321   */\n      lt\n        /* \"#utility.yul\":300:440   */\n      iszero\n      tag_62\n      jumpi\n        /* \"#utility.yul\":409:423   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":405:428   */\n      dup4\n      add\n        /* \"#utility.yul\":399:429   */\n      mload\n        /* \"#utility.yul\":375:392   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":394:396   */\n      0x40\n        /* \"#utility.yul\":371:397   */\n      add\n        /* \"#utility.yul\":364:430   */\n      mstore\n        /* \"#utility.yul\":329:339   */\n      dup3\n      add\n        /* \"#utility.yul\":300:440   */\n      jump(tag_60)\n    tag_62:\n        /* \"#utility.yul\":304:307   */\n      pop\n        /* \"#utility.yul\":489:490   */\n      0x00\n        /* \"#utility.yul\":484:486   */\n      0x40\n        /* \"#utility.yul\":475:481   */\n      dup3\n        /* \"#utility.yul\":464:473   */\n      dup7\n        /* \"#utility.yul\":460:482   */\n      add\n        /* \"#utility.yul\":456:487   */\n      add\n        /* \"#utility.yul\":449:491   */\n      mstore\n        /* \"#utility.yul\":559:561   */\n      0x40\n        /* \"#utility.yul\":552:554   */\n      0x1f\n        /* \"#utility.yul\":548:555   */\n      not\n        /* \"#utility.yul\":543:545   */\n      0x1f\n        /* \"#utility.yul\":535:541   */\n      dup4\n        /* \"#utility.yul\":531:546   */\n      add\n        /* \"#utility.yul\":527:556   */\n      and\n        /* \"#utility.yul\":516:525   */\n      dup6\n        /* \"#utility.yul\":512:557   */\n      add\n        /* \"#utility.yul\":508:562   */\n      add\n        /* \"#utility.yul\":500:562   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:568   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b00f267b8aeb832247c8c848b237dffa548a3e7761029298f3fbae86debaa3ff64736f6c63430008140033\n}\n","methodIdentifiers":{"arithmeticError()":"8995290f","assertionError()":"10332977","divisionError()":"fa784a44","encodeStorageError()":"d160e4de","enumConversionError()":"1de45560","indexOOBError()":"05ee8612","memOverflowError()":"986c5f68","popError()":"b22dc54d","zeroVarError()":"b67689da"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"arithmeticError\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assertionError\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"divisionError\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"encodeStorageError\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enumConversionError\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"indexOOBError\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"memOverflowError\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"popError\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zeroVarError\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/StdError.sol\":\"stdError\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"view","type":"function","name":"arithmeticError","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"assertionError","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"divisionError","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"encodeStorageError","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"enumConversionError","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"indexOOBError","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"memOverflowError","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"popError","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"zeroVarError","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/forge-std/src/StdError.sol":"stdError"},"evmVersion":"shanghai","libraries":{}},"sources":{"lib/forge-std/src/StdError.sol":{"keccak256":"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77","urls":["bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6","dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"],"license":"MIT"}},"version":1},"storageLayout":{"storage":[],"types":{}},"id":6}