// SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import "./IVault.sol";

/**
 * @title IAttacker
 * @dev Interface for attacker contracts
 */
interface IAttacker {
    // Events
    event AttackAttempted(uint256 attackType, string reason);
    event SecurityTestPassed(string testName);
    event AttackExecuted(uint256 attackCount, uint256 amount);
    event AttackCompleted(uint256 totalStolen);
    
    // Core functions
    function attack() external payable;
    function attackDepositBonus() external payable;
    function attackEmergencyWithdraw() external payable;
    
    // Utility functions
    function withdrawStolenFunds() external;
    function getAttackStats() external view returns (uint256 attackCount, uint256 totalStolen, uint256 currentBalance);
    function getVaultBalance() external view returns (uint256);
    function getVaultUserBalance() external view returns (uint256);
    
    // View functions - these are automatically generated by public state variables
    // function vault() external view returns (address);
    function attackCount() external view returns (uint256);
    function totalStolen() external view returns (uint256);
    
    // Receive function
    receive() external payable;
}
